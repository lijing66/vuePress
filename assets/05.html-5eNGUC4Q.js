import{_ as i,o as p,c as e,a as l,b as a}from"./app-du5sw6ua.js";const t={},r=a('<h1 id="说说-http-常见的状态码有哪些-适用场景" tabindex="-1"><a class="header-anchor" href="#说说-http-常见的状态码有哪些-适用场景" aria-hidden="true">#</a> 说说 HTTP 常见的状态码有哪些，适用场景？</h1><h2 id="简版" tabindex="-1"><a class="header-anchor" href="#简版" aria-hidden="true">#</a> 简版</h2><p><strong>成功（2XX）</strong></p><p>状态码 原因短语 说明</p><p>200 OK 表示从客户端发来的请求在服务器端被正确处理</p><p>201 Created 请求已经被实现，⽽且有⼀个新的资源已经依据请求的需要⽽建⽴ 通常是在 POST 请求，或是某些 PUT 请求之后创建了内容, 进行的返回的响应</p><p>202 Accepted 请求服务器已接受，但是尚未处理，不保证完成请求 适合异步任务或者说需要处理时间比较长的请求，避免 HTTP 连接一直占用</p><p>204 No content 表示请求成功，但响应报⽂不含实体的主体部分</p><p>206 Partial Content 进⾏的是范围请求, 表示服务器已经成功处理了部分 GET 请求 响应头中会包含获取的内容范围 (常用于分段下载)</p><p><strong>重定向（3XX）</strong></p><p>状态码 原因短语 说明</p><p>301 Moved Permanently 永久性重定向，表示资源已被分配了新的 URL 比如，我们访问 http://www.baidu.com 会跳转到 https://www.baidu.com</p><p>302 Found 临时性重定向，表示资源临时被分配了新的 URL, 支持搜索引擎优化 首页, 个人中心, 遇到了需要登录才能操作的内容, 重定向 到 登录页</p><p>303 See Other 对于 POST 请求，它表示请求已经被处理，客户端可以接着使用 GET 方法去请求 Location 里的 URI。</p><p>304 Not Modified 自从上次请求后，请求的网页内容未修改过。 服务器返回此响应时，不会返回网页内容。(协商缓存)</p><p>307 Temporary Redirect 对于 POST 请求，表示请求还没有被处理，客户端应该向 Location 里的 URI 重新发起 POST 请求。</p><p>不对请求做额外处理, 正常发送请求, 请求 location 中的 url 地址</p><p>因为 post 请求, 是非幂等的, 从 302 中, 细化出了 303 和 307</p><p>简而言之:</p><ul><li><p>301 302 307 都是重定向</p></li><li><p>304 协商缓存</p></li></ul><p><strong>客户端错误（4XX）</strong></p><p>状态码 原因短语 说明</p><p>400 Bad Request 请求报⽂存在语法错误（传参格式不正确）</p><p>401 UnAuthorized 权限认证未通过(没有权限)</p><p>403 Forbidden 表示对请求资源的访问被服务器拒绝</p><p>404 Not Found 表示在服务器上没有找到请求的资源</p><p>408 Request Timeout 客户端请求超时</p><p>409 Confict 请求的资源可能引起冲突</p><p><strong>服务端错误（5XX）</strong></p><p>状态码 原因短语 说明</p><p>500 Internal Sever Error 表示服务器端在执⾏请求时发⽣了错误</p><p>501 Not Implemented 请求超出服务器能⼒范围，例如服务器不⽀持当前请求所需要的某个功能， 或者请求是服务器不⽀持的某个⽅法</p><p>503 Service Unavailable 表明服务器暂时处于超负载或正在停机维护，⽆法处理请求</p><p>505 Http Version Not Supported 服务器不⽀持，或者拒绝⽀持在请求中使⽤的 HTTP 版本</p><h2 id="一、是什么" tabindex="-1"><a class="header-anchor" href="#一、是什么" aria-hidden="true">#</a> 一、是什么</h2><p>HTTP 状态码（英语：HTTP Status Code），用以表示网页服务器超文本传输协议响应状态的 3 位数字代码</p><p>它由 RFC 2616 规范定义的，并得到 <code>RFC 2518</code>、<code>RFC 2817</code>、<code>RFC 2295</code>、<code>RFC 2774</code>与 <code>RFC 4918</code>等规范扩展</p><p>简单来讲，<code>http</code>状态码的作用是服务器告诉客户端当前请求响应的状态，通过状态码就能判断和分析服务器的运行状态</p><h2 id="二、分类" tabindex="-1"><a class="header-anchor" href="#二、分类" aria-hidden="true">#</a> 二、分类</h2><p>状态码第一位数字决定了不同的响应状态，有如下：</p><ul><li>1 表示消息</li><li>2 表示成功</li><li>3 表示重定向</li><li>4 表示请求错误</li><li>5 表示服务器错误</li></ul><h3 id="_1xx" tabindex="-1"><a class="header-anchor" href="#_1xx" aria-hidden="true">#</a> 1xx</h3><p>代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束</p><p>常见的有：</p><ul><li>100（客户端继续发送请求，这是临时响应）：这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应</li><li>101：服务器根据客户端的请求切换协议，主要用于 websocket 或 http2 升级</li></ul><h3 id="_2xx" tabindex="-1"><a class="header-anchor" href="#_2xx" aria-hidden="true">#</a> 2xx</h3><p>代表请求已成功被服务器接收、理解、并接受</p><p>常见的有：</p><ul><li><p>200（成功）：请求已成功，请求所希望的响应头或数据体将随此响应返回</p></li><li><p>201（已创建）：请求成功并且服务器创建了新的资源</p></li><li><p>202（已创建）：服务器已经接收请求，但尚未处理</p></li><li><p>203（非授权信息）：服务器已成功处理请求，但返回的信息可能来自另一来源</p></li><li><p>204（无内容）：服务器成功处理请求，但没有返回任何内容</p></li><li><p>205（重置内容）：服务器成功处理请求，但没有返回任何内容</p></li><li><p>206（部分内容）：服务器成功处理了部分请求</p></li></ul><h3 id="_3xx" tabindex="-1"><a class="header-anchor" href="#_3xx" aria-hidden="true">#</a> 3xx</h3><p>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向</p><p>常见的有：</p><ul><li><p>300（多种选择）：针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择</p></li><li><p>301（永久移动）：请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置</p></li><li><p>302（临时移动）： 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求</p></li><li><p>303（查看其他位置）：请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码</p></li><li><p>305 （使用代理）： 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理</p></li><li><p>307 （临时重定向）： 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求</p></li></ul><h3 id="_4xx" tabindex="-1"><a class="header-anchor" href="#_4xx" aria-hidden="true">#</a> 4xx</h3><p>代表了客户端看起来可能发生了错误，妨碍了服务器的处理</p><p>常见的有：</p><ul><li>400（错误请求）： 服务器不理解请求的语法</li><li>401（未授权）： 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。</li><li>403（禁止）： 服务器拒绝请求</li><li>404（未找到）： 服务器找不到请求的网页</li><li>405（方法禁用）： 禁用请求中指定的方法</li><li>406（不接受）： 无法使用请求的内容特性响应请求的网页</li><li>407（需要代理授权）： 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理</li><li>408（请求超时）： 服务器等候请求时发生超时</li></ul><h3 id="_5xx" tabindex="-1"><a class="header-anchor" href="#_5xx" aria-hidden="true">#</a> 5xx</h3><p>表示服务器无法完成明显有效的请求。这类状态码代表了服务器在处理请求的过程中有错误或者异常状态发生</p><p>常见的有：</p><ul><li>500（服务器内部错误）：服务器遇到错误，无法完成请求</li><li>501（尚未实施）：服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码</li><li>502（错误网关）： 服务器作为网关或代理，从上游服务器收到无效响应</li><li>503（服务不可用）： 服务器目前无法使用（由于超载或停机维护）</li><li>504（网关超时）： 服务器作为网关或代理，但是没有及时从上游服务器收到请求</li><li>505（HTTP 版本不受支持）： 服务器不支持请求中所用的 HTTP 协议版本</li></ul><h2 id="三、适用场景" tabindex="-1"><a class="header-anchor" href="#三、适用场景" aria-hidden="true">#</a> 三、适用场景</h2><p>下面给出一些状态码的适用场景：</p><ul><li><p>100：客户端在发送 POST 数据给服务器前，征询服务器情况，看服务器是否处理 POST 的数据，如果不处理，客户端则不上传 POST 数据，如果处理，则 POST 上传数据。常用于 POST 大数据传输</p></li><li><p>206：一般用来做断点续传，或者是视频文件等大文件的加载</p></li><li><p>301：永久重定向会缓存。新域名替换旧域名，旧的域名不再使用时，用户访问旧域名时用 301 就重定向到新的域名</p></li><li><p>302：临时重定向不会缓存，常用 于未登陆的用户访问用户中心重定向到登录页面</p></li><li><p>304：协商缓存，告诉客户端有缓存，直接使用缓存中的数据，返回页面的只有头部信息，是没有内容部分</p></li><li><p>400：参数有误，请求无法被服务器识别</p></li><li><p>403：告诉客户端进制访问该站点或者资源，如在外网环境下，然后访问只有内网 IP 才能访问的时候则返回</p></li><li><p>404：服务器找不到资源时，或者服务器拒绝请求又不想说明理由时</p></li><li><p>503：服务器停机维护时，主动用 503 响应请求或 nginx 设置限速，超过限速，会返回 503</p></li><li><p>504：网关超时</p></li></ul><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2><ul><li>https://zh.wikipedia.org/wiki/HTTP状态码</li><li>https://kebingzao.com/2018/10/05/http-status-code/</li></ul>',66);function d(n,o){return p(),e("div",null,[l(`
 * @Author: lijing
 * @Date: 2023-12-15 23:13:12
 * @LastEditors: lijing
 * @LastEditTime: 2023-12-15 23:26:16
 * @Description: 
`),r])}const c=i(t,[["render",d],["__file","05.html.vue"]]);export{c as default};
